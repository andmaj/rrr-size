# Makefile.in generated by automake 1.11.3 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This Makefile builds the libcds library.


pkgdatadir = $(datadir)/cds
pkgincludedir = $(includedir)/cds
pkglibdir = $(libdir)/cds
pkglibexecdir = $(libexecdir)/cds
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_prog_doxygen.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/build-aux/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libcds_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libcds_la_OBJECTS = static/bitsequence/BitSequenceBuilderDArray.lo \
	static/bitsequence/BitSequenceBuilderRG.lo \
	static/bitsequence/BitSequenceBuilderRRR.lo \
	static/bitsequence/BitSequenceBuilderSDArray.lo \
	static/bitsequence/BitSequence.lo \
	static/bitsequence/BitSequenceDArray.lo \
	static/bitsequence/BitSequenceRG.lo \
	static/bitsequence/BitSequenceRRR.lo \
	static/bitsequence/BitSequenceSDArray.lo \
	static/bitsequence/sdarraySadakane.lo \
	static/bitsequence/TableOffsetRRR.lo static/coders/huff.lo \
	static/coders/HuffmanCoder.lo static/mapper/MapperCont.lo \
	static/mapper/Mapper.lo static/mapper/MapperNone.lo \
	static/mapper/MapperRev.lo static/permutation/perm.lo \
	static/permutation/PermutationBuilderMRRR.lo \
	static/permutation/PermutationBuilderWT.lo \
	static/permutation/Permutation.lo \
	static/permutation/PermutationMRRR.lo \
	static/permutation/PermutationWT.lo \
	static/sequence/BitmapsSequence.lo \
	static/sequence/SequenceAlphPart.lo \
	static/sequence/SequenceBuilderAlphPart.lo \
	static/sequence/SequenceBuilderGMRChunk.lo \
	static/sequence/SequenceBuilderGMR.lo \
	static/sequence/SequenceBuilderStr.lo \
	static/sequence/SequenceBuilderWaveletMatrix.lo \
	static/sequence/SequenceBuilderWaveletTree.lo \
	static/sequence/SequenceBuilderWaveletTreeNoptrs.lo \
	static/sequence/SequenceBuilderWaveletTreeNoptrsS.lo \
	static/sequence/Sequence.lo \
	static/sequence/SequenceGMRChunk.lo \
	static/sequence/SequenceGMR.lo \
	static/sequence/WaveletMatrix.lo \
	static/sequence/WaveletTree.lo \
	static/sequence/WaveletTreeNoptrs.lo \
	static/sequence/WaveletTreeNoptrsS.lo \
	static/sequence/wt_coder_binary.lo static/sequence/wt_coder.lo \
	static/sequence/wt_coder_huff.lo static/sequence/wt_node.lo \
	static/sequence/wt_node_internal.lo \
	static/sequence/wt_node_leaf.lo utils/Array.lo \
	utils/cppUtils.lo utils/libcdsBitString.lo utils/timing.lo
libcds_la_OBJECTS = $(am_libcds_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libcds_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libcds_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)/build-aux
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libcds_la_SOURCES)
DIST_SOURCES = $(libcds_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/andras/rrr-size-vs-density/libcds/lib/src/libcds/build-aux/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/andras/rrr-size-vs-density/libcds/lib/src/libcds/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/andras/rrr-size-vs-density/libcds/lib/src/libcds/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/andras/rrr-size-vs-density/libcds/lib/src/libcds/build-aux/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CDS_SO_VERSION = 1:3:0
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN_PAPER_SIZE = 
DSYMUTIL = 
DUMPBIN = 
DX_CONFIG = Doxyfile
DX_DOCDIR = docs/
DX_DOT = 
DX_DOXYGEN = 
DX_DVIPS = 
DX_EGREP = 
DX_ENV =  SRCDIR='.' PROJECT='libcds' DOCDIR='docs/' VERSION='1.0' HAVE_DOT='NO' GENERATE_MAN='NO' GENERATE_RTF='NO' GENERATE_XML='NO' GENERATE_HTMLHELP='NO' GENERATE_CHI='NO' GENERATE_HTML='NO' GENERATE_LATEX='NO'
DX_FLAG_chi = 0
DX_FLAG_chm = 0
DX_FLAG_doc = 0
DX_FLAG_dot = 0
DX_FLAG_html = 0
DX_FLAG_man = 0
DX_FLAG_pdf = 0
DX_FLAG_ps = 0
DX_FLAG_rtf = 0
DX_FLAG_xml = 0
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = /usr/bin/perl
DX_PROJECT = libcds
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = build-aux/ltmain.sh
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/andras/rrr-size-vs-density/libcds/lib/src/libcds/build-aux/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = cds
PACKAGE_BUGREPORT = fclaude@gmail.com
PACKAGE_NAME = libcds
PACKAGE_STRING = libcds 1.0
PACKAGE_TARNAME = cds
PACKAGE_URL = https://github.com/fclaude/libcds
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 1.0
abs_builddir = /home/andras/rrr-size-vs-density/libcds/lib/src/libcds/src
abs_srcdir = /home/andras/rrr-size-vs-density/libcds/lib/src/libcds/src
abs_top_builddir = /home/andras/rrr-size-vs-density/libcds/lib/src/libcds
abs_top_srcdir = /home/andras/rrr-size-vs-density/libcds/lib/src/libcds
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/andras/rrr-size-vs-density/libcds/lib/src/libcds/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/andras/rrr-size-vs-density/libcds/lib/build
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = -I../include/
lib_LTLIBRARIES = libcds.la
libcds_la_LDFLAGS = -version-info $(CDS_SO_VERSION)
libcds_la_SOURCES = \
    static/bitsequence/BitSequenceBuilderDArray.cpp \
    static/bitsequence/BitSequenceBuilderRG.cpp \
    static/bitsequence/BitSequenceBuilderRRR.cpp \
    static/bitsequence/BitSequenceBuilderSDArray.cpp \
    static/bitsequence/BitSequence.cpp \
    static/bitsequence/BitSequenceDArray.cpp \
    static/bitsequence/BitSequenceRG.cpp \
    static/bitsequence/BitSequenceRRR.cpp \
    static/bitsequence/BitSequenceSDArray.cpp \
    static/bitsequence/sdarraySadakane.cpp \
    static/bitsequence/TableOffsetRRR.cpp \
    static/coders/huff.cpp \
    static/coders/HuffmanCoder.cpp \
    static/mapper/MapperCont.cpp \
    static/mapper/Mapper.cpp \
    static/mapper/MapperNone.cpp \
    static/mapper/MapperRev.cpp \
    static/permutation/perm.cpp \
    static/permutation/PermutationBuilderMRRR.cpp \
    static/permutation/PermutationBuilderWT.cpp \
    static/permutation/Permutation.cpp \
    static/permutation/PermutationMRRR.cpp \
    static/permutation/PermutationWT.cpp \
    static/sequence/BitmapsSequence.cpp \
    static/sequence/SequenceAlphPart.cpp \
    static/sequence/SequenceBuilderAlphPart.cpp \
    static/sequence/SequenceBuilderGMRChunk.cpp \
    static/sequence/SequenceBuilderGMR.cpp \
    static/sequence/SequenceBuilderStr.cpp \
    static/sequence/SequenceBuilderWaveletMatrix.cpp \
    static/sequence/SequenceBuilderWaveletTree.cpp \
    static/sequence/SequenceBuilderWaveletTreeNoptrs.cpp \
    static/sequence/SequenceBuilderWaveletTreeNoptrsS.cpp \
    static/sequence/Sequence.cpp \
    static/sequence/SequenceGMRChunk.cpp \
    static/sequence/SequenceGMR.cpp \
    static/sequence/WaveletMatrix.cpp \
    static/sequence/WaveletTree.cpp \
    static/sequence/WaveletTreeNoptrs.cpp \
    static/sequence/WaveletTreeNoptrsS.cpp \
    static/sequence/wt_coder_binary.cpp \
    static/sequence/wt_coder.cpp \
    static/sequence/wt_coder_huff.cpp \
    static/sequence/wt_node.cpp \
    static/sequence/wt_node_internal.cpp \
    static/sequence/wt_node_leaf.cpp \
    utils/Array.cpp \
    utils/cppUtils.cpp \
    utils/libcdsBitString.cpp \
    utils/timing.cpp

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
static/bitsequence/$(am__dirstamp):
	@$(MKDIR_P) static/bitsequence
	@: > static/bitsequence/$(am__dirstamp)
static/bitsequence/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) static/bitsequence/$(DEPDIR)
	@: > static/bitsequence/$(DEPDIR)/$(am__dirstamp)
static/bitsequence/BitSequenceBuilderDArray.lo:  \
	static/bitsequence/$(am__dirstamp) \
	static/bitsequence/$(DEPDIR)/$(am__dirstamp)
static/bitsequence/BitSequenceBuilderRG.lo:  \
	static/bitsequence/$(am__dirstamp) \
	static/bitsequence/$(DEPDIR)/$(am__dirstamp)
static/bitsequence/BitSequenceBuilderRRR.lo:  \
	static/bitsequence/$(am__dirstamp) \
	static/bitsequence/$(DEPDIR)/$(am__dirstamp)
static/bitsequence/BitSequenceBuilderSDArray.lo:  \
	static/bitsequence/$(am__dirstamp) \
	static/bitsequence/$(DEPDIR)/$(am__dirstamp)
static/bitsequence/BitSequence.lo: static/bitsequence/$(am__dirstamp) \
	static/bitsequence/$(DEPDIR)/$(am__dirstamp)
static/bitsequence/BitSequenceDArray.lo:  \
	static/bitsequence/$(am__dirstamp) \
	static/bitsequence/$(DEPDIR)/$(am__dirstamp)
static/bitsequence/BitSequenceRG.lo:  \
	static/bitsequence/$(am__dirstamp) \
	static/bitsequence/$(DEPDIR)/$(am__dirstamp)
static/bitsequence/BitSequenceRRR.lo:  \
	static/bitsequence/$(am__dirstamp) \
	static/bitsequence/$(DEPDIR)/$(am__dirstamp)
static/bitsequence/BitSequenceSDArray.lo:  \
	static/bitsequence/$(am__dirstamp) \
	static/bitsequence/$(DEPDIR)/$(am__dirstamp)
static/bitsequence/sdarraySadakane.lo:  \
	static/bitsequence/$(am__dirstamp) \
	static/bitsequence/$(DEPDIR)/$(am__dirstamp)
static/bitsequence/TableOffsetRRR.lo:  \
	static/bitsequence/$(am__dirstamp) \
	static/bitsequence/$(DEPDIR)/$(am__dirstamp)
static/coders/$(am__dirstamp):
	@$(MKDIR_P) static/coders
	@: > static/coders/$(am__dirstamp)
static/coders/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) static/coders/$(DEPDIR)
	@: > static/coders/$(DEPDIR)/$(am__dirstamp)
static/coders/huff.lo: static/coders/$(am__dirstamp) \
	static/coders/$(DEPDIR)/$(am__dirstamp)
static/coders/HuffmanCoder.lo: static/coders/$(am__dirstamp) \
	static/coders/$(DEPDIR)/$(am__dirstamp)
static/mapper/$(am__dirstamp):
	@$(MKDIR_P) static/mapper
	@: > static/mapper/$(am__dirstamp)
static/mapper/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) static/mapper/$(DEPDIR)
	@: > static/mapper/$(DEPDIR)/$(am__dirstamp)
static/mapper/MapperCont.lo: static/mapper/$(am__dirstamp) \
	static/mapper/$(DEPDIR)/$(am__dirstamp)
static/mapper/Mapper.lo: static/mapper/$(am__dirstamp) \
	static/mapper/$(DEPDIR)/$(am__dirstamp)
static/mapper/MapperNone.lo: static/mapper/$(am__dirstamp) \
	static/mapper/$(DEPDIR)/$(am__dirstamp)
static/mapper/MapperRev.lo: static/mapper/$(am__dirstamp) \
	static/mapper/$(DEPDIR)/$(am__dirstamp)
static/permutation/$(am__dirstamp):
	@$(MKDIR_P) static/permutation
	@: > static/permutation/$(am__dirstamp)
static/permutation/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) static/permutation/$(DEPDIR)
	@: > static/permutation/$(DEPDIR)/$(am__dirstamp)
static/permutation/perm.lo: static/permutation/$(am__dirstamp) \
	static/permutation/$(DEPDIR)/$(am__dirstamp)
static/permutation/PermutationBuilderMRRR.lo:  \
	static/permutation/$(am__dirstamp) \
	static/permutation/$(DEPDIR)/$(am__dirstamp)
static/permutation/PermutationBuilderWT.lo:  \
	static/permutation/$(am__dirstamp) \
	static/permutation/$(DEPDIR)/$(am__dirstamp)
static/permutation/Permutation.lo: static/permutation/$(am__dirstamp) \
	static/permutation/$(DEPDIR)/$(am__dirstamp)
static/permutation/PermutationMRRR.lo:  \
	static/permutation/$(am__dirstamp) \
	static/permutation/$(DEPDIR)/$(am__dirstamp)
static/permutation/PermutationWT.lo:  \
	static/permutation/$(am__dirstamp) \
	static/permutation/$(DEPDIR)/$(am__dirstamp)
static/sequence/$(am__dirstamp):
	@$(MKDIR_P) static/sequence
	@: > static/sequence/$(am__dirstamp)
static/sequence/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) static/sequence/$(DEPDIR)
	@: > static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/BitmapsSequence.lo: static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/SequenceAlphPart.lo: static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/SequenceBuilderAlphPart.lo:  \
	static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/SequenceBuilderGMRChunk.lo:  \
	static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/SequenceBuilderGMR.lo:  \
	static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/SequenceBuilderStr.lo:  \
	static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/SequenceBuilderWaveletMatrix.lo:  \
	static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/SequenceBuilderWaveletTree.lo:  \
	static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/SequenceBuilderWaveletTreeNoptrs.lo:  \
	static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/SequenceBuilderWaveletTreeNoptrsS.lo:  \
	static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/Sequence.lo: static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/SequenceGMRChunk.lo: static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/SequenceGMR.lo: static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/WaveletMatrix.lo: static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/WaveletTree.lo: static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/WaveletTreeNoptrs.lo: static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/WaveletTreeNoptrsS.lo:  \
	static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/wt_coder_binary.lo: static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/wt_coder.lo: static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/wt_coder_huff.lo: static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/wt_node.lo: static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/wt_node_internal.lo: static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
static/sequence/wt_node_leaf.lo: static/sequence/$(am__dirstamp) \
	static/sequence/$(DEPDIR)/$(am__dirstamp)
utils/$(am__dirstamp):
	@$(MKDIR_P) utils
	@: > utils/$(am__dirstamp)
utils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) utils/$(DEPDIR)
	@: > utils/$(DEPDIR)/$(am__dirstamp)
utils/Array.lo: utils/$(am__dirstamp) utils/$(DEPDIR)/$(am__dirstamp)
utils/cppUtils.lo: utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/libcdsBitString.lo: utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/timing.lo: utils/$(am__dirstamp) utils/$(DEPDIR)/$(am__dirstamp)
libcds.la: $(libcds_la_OBJECTS) $(libcds_la_DEPENDENCIES) $(EXTRA_libcds_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libcds_la_LINK) -rpath $(libdir) $(libcds_la_OBJECTS) $(libcds_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f static/bitsequence/BitSequence.$(OBJEXT)
	-rm -f static/bitsequence/BitSequence.lo
	-rm -f static/bitsequence/BitSequenceBuilderDArray.$(OBJEXT)
	-rm -f static/bitsequence/BitSequenceBuilderDArray.lo
	-rm -f static/bitsequence/BitSequenceBuilderRG.$(OBJEXT)
	-rm -f static/bitsequence/BitSequenceBuilderRG.lo
	-rm -f static/bitsequence/BitSequenceBuilderRRR.$(OBJEXT)
	-rm -f static/bitsequence/BitSequenceBuilderRRR.lo
	-rm -f static/bitsequence/BitSequenceBuilderSDArray.$(OBJEXT)
	-rm -f static/bitsequence/BitSequenceBuilderSDArray.lo
	-rm -f static/bitsequence/BitSequenceDArray.$(OBJEXT)
	-rm -f static/bitsequence/BitSequenceDArray.lo
	-rm -f static/bitsequence/BitSequenceRG.$(OBJEXT)
	-rm -f static/bitsequence/BitSequenceRG.lo
	-rm -f static/bitsequence/BitSequenceRRR.$(OBJEXT)
	-rm -f static/bitsequence/BitSequenceRRR.lo
	-rm -f static/bitsequence/BitSequenceSDArray.$(OBJEXT)
	-rm -f static/bitsequence/BitSequenceSDArray.lo
	-rm -f static/bitsequence/TableOffsetRRR.$(OBJEXT)
	-rm -f static/bitsequence/TableOffsetRRR.lo
	-rm -f static/bitsequence/sdarraySadakane.$(OBJEXT)
	-rm -f static/bitsequence/sdarraySadakane.lo
	-rm -f static/coders/HuffmanCoder.$(OBJEXT)
	-rm -f static/coders/HuffmanCoder.lo
	-rm -f static/coders/huff.$(OBJEXT)
	-rm -f static/coders/huff.lo
	-rm -f static/mapper/Mapper.$(OBJEXT)
	-rm -f static/mapper/Mapper.lo
	-rm -f static/mapper/MapperCont.$(OBJEXT)
	-rm -f static/mapper/MapperCont.lo
	-rm -f static/mapper/MapperNone.$(OBJEXT)
	-rm -f static/mapper/MapperNone.lo
	-rm -f static/mapper/MapperRev.$(OBJEXT)
	-rm -f static/mapper/MapperRev.lo
	-rm -f static/permutation/Permutation.$(OBJEXT)
	-rm -f static/permutation/Permutation.lo
	-rm -f static/permutation/PermutationBuilderMRRR.$(OBJEXT)
	-rm -f static/permutation/PermutationBuilderMRRR.lo
	-rm -f static/permutation/PermutationBuilderWT.$(OBJEXT)
	-rm -f static/permutation/PermutationBuilderWT.lo
	-rm -f static/permutation/PermutationMRRR.$(OBJEXT)
	-rm -f static/permutation/PermutationMRRR.lo
	-rm -f static/permutation/PermutationWT.$(OBJEXT)
	-rm -f static/permutation/PermutationWT.lo
	-rm -f static/permutation/perm.$(OBJEXT)
	-rm -f static/permutation/perm.lo
	-rm -f static/sequence/BitmapsSequence.$(OBJEXT)
	-rm -f static/sequence/BitmapsSequence.lo
	-rm -f static/sequence/Sequence.$(OBJEXT)
	-rm -f static/sequence/Sequence.lo
	-rm -f static/sequence/SequenceAlphPart.$(OBJEXT)
	-rm -f static/sequence/SequenceAlphPart.lo
	-rm -f static/sequence/SequenceBuilderAlphPart.$(OBJEXT)
	-rm -f static/sequence/SequenceBuilderAlphPart.lo
	-rm -f static/sequence/SequenceBuilderGMR.$(OBJEXT)
	-rm -f static/sequence/SequenceBuilderGMR.lo
	-rm -f static/sequence/SequenceBuilderGMRChunk.$(OBJEXT)
	-rm -f static/sequence/SequenceBuilderGMRChunk.lo
	-rm -f static/sequence/SequenceBuilderStr.$(OBJEXT)
	-rm -f static/sequence/SequenceBuilderStr.lo
	-rm -f static/sequence/SequenceBuilderWaveletMatrix.$(OBJEXT)
	-rm -f static/sequence/SequenceBuilderWaveletMatrix.lo
	-rm -f static/sequence/SequenceBuilderWaveletTree.$(OBJEXT)
	-rm -f static/sequence/SequenceBuilderWaveletTree.lo
	-rm -f static/sequence/SequenceBuilderWaveletTreeNoptrs.$(OBJEXT)
	-rm -f static/sequence/SequenceBuilderWaveletTreeNoptrs.lo
	-rm -f static/sequence/SequenceBuilderWaveletTreeNoptrsS.$(OBJEXT)
	-rm -f static/sequence/SequenceBuilderWaveletTreeNoptrsS.lo
	-rm -f static/sequence/SequenceGMR.$(OBJEXT)
	-rm -f static/sequence/SequenceGMR.lo
	-rm -f static/sequence/SequenceGMRChunk.$(OBJEXT)
	-rm -f static/sequence/SequenceGMRChunk.lo
	-rm -f static/sequence/WaveletMatrix.$(OBJEXT)
	-rm -f static/sequence/WaveletMatrix.lo
	-rm -f static/sequence/WaveletTree.$(OBJEXT)
	-rm -f static/sequence/WaveletTree.lo
	-rm -f static/sequence/WaveletTreeNoptrs.$(OBJEXT)
	-rm -f static/sequence/WaveletTreeNoptrs.lo
	-rm -f static/sequence/WaveletTreeNoptrsS.$(OBJEXT)
	-rm -f static/sequence/WaveletTreeNoptrsS.lo
	-rm -f static/sequence/wt_coder.$(OBJEXT)
	-rm -f static/sequence/wt_coder.lo
	-rm -f static/sequence/wt_coder_binary.$(OBJEXT)
	-rm -f static/sequence/wt_coder_binary.lo
	-rm -f static/sequence/wt_coder_huff.$(OBJEXT)
	-rm -f static/sequence/wt_coder_huff.lo
	-rm -f static/sequence/wt_node.$(OBJEXT)
	-rm -f static/sequence/wt_node.lo
	-rm -f static/sequence/wt_node_internal.$(OBJEXT)
	-rm -f static/sequence/wt_node_internal.lo
	-rm -f static/sequence/wt_node_leaf.$(OBJEXT)
	-rm -f static/sequence/wt_node_leaf.lo
	-rm -f utils/Array.$(OBJEXT)
	-rm -f utils/Array.lo
	-rm -f utils/cppUtils.$(OBJEXT)
	-rm -f utils/cppUtils.lo
	-rm -f utils/libcdsBitString.$(OBJEXT)
	-rm -f utils/libcdsBitString.lo
	-rm -f utils/timing.$(OBJEXT)
	-rm -f utils/timing.lo

distclean-compile:
	-rm -f *.tab.c

include static/bitsequence/$(DEPDIR)/BitSequence.Plo
include static/bitsequence/$(DEPDIR)/BitSequenceBuilderDArray.Plo
include static/bitsequence/$(DEPDIR)/BitSequenceBuilderRG.Plo
include static/bitsequence/$(DEPDIR)/BitSequenceBuilderRRR.Plo
include static/bitsequence/$(DEPDIR)/BitSequenceBuilderSDArray.Plo
include static/bitsequence/$(DEPDIR)/BitSequenceDArray.Plo
include static/bitsequence/$(DEPDIR)/BitSequenceRG.Plo
include static/bitsequence/$(DEPDIR)/BitSequenceRRR.Plo
include static/bitsequence/$(DEPDIR)/BitSequenceSDArray.Plo
include static/bitsequence/$(DEPDIR)/TableOffsetRRR.Plo
include static/bitsequence/$(DEPDIR)/sdarraySadakane.Plo
include static/coders/$(DEPDIR)/HuffmanCoder.Plo
include static/coders/$(DEPDIR)/huff.Plo
include static/mapper/$(DEPDIR)/Mapper.Plo
include static/mapper/$(DEPDIR)/MapperCont.Plo
include static/mapper/$(DEPDIR)/MapperNone.Plo
include static/mapper/$(DEPDIR)/MapperRev.Plo
include static/permutation/$(DEPDIR)/Permutation.Plo
include static/permutation/$(DEPDIR)/PermutationBuilderMRRR.Plo
include static/permutation/$(DEPDIR)/PermutationBuilderWT.Plo
include static/permutation/$(DEPDIR)/PermutationMRRR.Plo
include static/permutation/$(DEPDIR)/PermutationWT.Plo
include static/permutation/$(DEPDIR)/perm.Plo
include static/sequence/$(DEPDIR)/BitmapsSequence.Plo
include static/sequence/$(DEPDIR)/Sequence.Plo
include static/sequence/$(DEPDIR)/SequenceAlphPart.Plo
include static/sequence/$(DEPDIR)/SequenceBuilderAlphPart.Plo
include static/sequence/$(DEPDIR)/SequenceBuilderGMR.Plo
include static/sequence/$(DEPDIR)/SequenceBuilderGMRChunk.Plo
include static/sequence/$(DEPDIR)/SequenceBuilderStr.Plo
include static/sequence/$(DEPDIR)/SequenceBuilderWaveletMatrix.Plo
include static/sequence/$(DEPDIR)/SequenceBuilderWaveletTree.Plo
include static/sequence/$(DEPDIR)/SequenceBuilderWaveletTreeNoptrs.Plo
include static/sequence/$(DEPDIR)/SequenceBuilderWaveletTreeNoptrsS.Plo
include static/sequence/$(DEPDIR)/SequenceGMR.Plo
include static/sequence/$(DEPDIR)/SequenceGMRChunk.Plo
include static/sequence/$(DEPDIR)/WaveletMatrix.Plo
include static/sequence/$(DEPDIR)/WaveletTree.Plo
include static/sequence/$(DEPDIR)/WaveletTreeNoptrs.Plo
include static/sequence/$(DEPDIR)/WaveletTreeNoptrsS.Plo
include static/sequence/$(DEPDIR)/wt_coder.Plo
include static/sequence/$(DEPDIR)/wt_coder_binary.Plo
include static/sequence/$(DEPDIR)/wt_coder_huff.Plo
include static/sequence/$(DEPDIR)/wt_node.Plo
include static/sequence/$(DEPDIR)/wt_node_internal.Plo
include static/sequence/$(DEPDIR)/wt_node_leaf.Plo
include utils/$(DEPDIR)/Array.Plo
include utils/$(DEPDIR)/cppUtils.Plo
include utils/$(DEPDIR)/libcdsBitString.Plo
include utils/$(DEPDIR)/timing.Plo

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf static/bitsequence/.libs static/bitsequence/_libs
	-rm -rf static/coders/.libs static/coders/_libs
	-rm -rf static/mapper/.libs static/mapper/_libs
	-rm -rf static/permutation/.libs static/permutation/_libs
	-rm -rf static/sequence/.libs static/sequence/_libs
	-rm -rf utils/.libs utils/_libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f static/bitsequence/$(DEPDIR)/$(am__dirstamp)
	-rm -f static/bitsequence/$(am__dirstamp)
	-rm -f static/coders/$(DEPDIR)/$(am__dirstamp)
	-rm -f static/coders/$(am__dirstamp)
	-rm -f static/mapper/$(DEPDIR)/$(am__dirstamp)
	-rm -f static/mapper/$(am__dirstamp)
	-rm -f static/permutation/$(DEPDIR)/$(am__dirstamp)
	-rm -f static/permutation/$(am__dirstamp)
	-rm -f static/sequence/$(DEPDIR)/$(am__dirstamp)
	-rm -f static/sequence/$(am__dirstamp)
	-rm -f utils/$(DEPDIR)/$(am__dirstamp)
	-rm -f utils/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf static/bitsequence/$(DEPDIR) static/coders/$(DEPDIR) static/mapper/$(DEPDIR) static/permutation/$(DEPDIR) static/sequence/$(DEPDIR) utils/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf static/bitsequence/$(DEPDIR) static/coders/$(DEPDIR) static/mapper/$(DEPDIR) static/permutation/$(DEPDIR) static/sequence/$(DEPDIR) utils/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
